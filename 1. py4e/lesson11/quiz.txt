Q: What is the difference between a Python tuple and Python list?
A: Lists are mutable and tuples are not mutable
---
Q: Which of the following methods are available for both Python lists and Python tuples?
A: index()
---
Q: What will end up in the variable y after this code is executed?
x , y = 3, 4
A: 4
---
Q: In the following Python code, what will end up in the variable y?
x = { 'chuck' : 1 , 'fred' : 42, 'jan': 100}
y = x.items()
A: A list of tuples
---
Q: Which of the following tuples is greater than x in the following Python sequence?
x = (5, 1, 3)
if ??? > x :
   ...
A: (6, 0, 0)
---
Q: What does the following Python code accomplish, assuming the c is a non-empty dictionary?
tmp = list()
for k, v in c.items() :
    tmp.append( (v, k) )
A: It creates a list of tuples where each tuple is a value, key pair
---
Q: If the variable data is a Python list, how do we sort it in reverse order?
A: data.sort(reverse=True)
---
Q: Using the following tuple, how would you print 'Wed'?
days = ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun')
A: print(days[2])
---
Q: In the following Python loop, why are there two iteration variables (k and v)?
c = {'a':10, 'b':1, 'c':22}
for k, v in c.items() :
    ...
A: Because the items() method in dictionaries returns a list of tuples
---
Q: Given that Python lists and Python tuples are quite similar - when might you prefer to use a tuple over a list?
A: For a temporary variable that you will use and discard without modifying